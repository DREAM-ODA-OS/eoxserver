
class ConnectorInterface(object):
    """ Interface for connectors between `mapscript.layerObj` and associated 
        data.
    """

    def supports(self, data_items):
        """ Returns `True` if the given `data_items` are supported and 
            `False` if not.
        """
    
    def connect(self, coverage, data_items, layer, cache):
        """ Connect a layer (a `mapscript.layerObj`) with the given data 
            items and coverage (a list of two-tuples: location and semantic).
        """

    def disconnect(self, coverage, data_items, layer, cache):
        """ Performs all necessary cleanup operations.
        """


class LayerFactoryInterface(object):
    """ Interface for factories that create `mapscript.layerObj` objects for 
        coverages.
    """

    @property
    def handles(self):
        """ Iterable of all object types that are supported by this connector.
        """

    @property
    def suffix(self):
        """ The suffix associated with layers this factory produces. This is 
            used for "specialized" layers such as "bands" or "outlines" layers.
            For factories that don't use this feature, it can be left out.
        """

    @property
    def requires_connection(self):
        """ Return whether or layers generated by this factory require to be 
            connected via a layer connector.
        """

    def generate(self, eo_object, group_layer, options):
        """ Returns an iterable of `mapscript.layerObj` objects preconfigured 
            for the given EO object. This is easily done via the `yield` 
            statement.
        """

    def generate_group(self, name):
        """ Returns a 'group layer' to be referenced by all other layers 
            generated by this factory.
        """


class StyleApplicatorInterface(object):
    """ Interface for style applicators.
    """

    def apply(self, coverage, data_items, layer, cache):
        """ Apply all relevant styles.
        """
